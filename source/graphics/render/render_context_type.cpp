#include <string/module.h>
#include <graphics/error/module.h>
#include "render_context_type.h"

PUNK_ENGINE_BEGIN
namespace Graphics {

	PUNK_ENGINE_API const Core::String RenderPolicySetToString(RenderContextType policy) {
		switch (policy) {
		case RenderContextType::NoLightSolidColor:
			return Core::String(L"NoLightSolidColor");
		case RenderContextType::NoLightSolidColorTextured:
			return Core::String(L"NoLightSolidColorTextured");
		case RenderContextType::NoLightVertexColor:
			return Core::String(L"SolidVertexColor");
		case RenderContextType::BumpMappingDiffuse:
			return Core::String(L"BumpMappingDiffuse");
		case RenderContextType::BumpMappingDiffuseShadowingSimple:
			return Core::String(L"BumpMappingDiffuseShadowingSimple");
		case RenderContextType::BumpMappingDiffuseShadowingCascade:
			return Core::String(L"BumpMappingDiffuseShadowingCascade");
		case RenderContextType::BumpMappingDiffuseSkinning:
			return Core::String(L"BumpMappingDiffuseSkinning");
		case RenderContextType::BumpMappingDiffuseSkinningShadowingSimple:
			return Core::String(L"BumpMappingDiffuseSkinningShadowingSimple");
		case RenderContextType::BumpMappingDiffuseSkinningShadowingCascade:
			return Core::String(L"BumpMappingDiffuseSkinningShadowingCascade");
		case RenderContextType::BumpMappingDiffuseSpecular:
			return Core::String(L"BumpMappingDiffuseSpecular");
		case RenderContextType::BumpMappingDiffuseSpecularShadowingSimple:
			return Core::String(L"BumpMappingDiffuseSpecularShadowingSimple");
		case RenderContextType::BumpMappingDiffuseSpecularShadowingCascade:
			return Core::String(L"BumpMappingDiffuseSpecularShadowingCascade");
		case RenderContextType::BumpMappingDiffuseSpecularSkinning:
			return Core::String(L"BumpMappingDiffuseSpecularSkinning");
		case RenderContextType::BumpMappingDiffuseSpecularSkinningShadowingSimple:
			return Core::String(L"BumpMappingDiffuseSpecularSkinningShadowingSimple");
		case RenderContextType::BumpMappingDiffuseSpecularSkinningShadowingCascade:
			return Core::String(L"BumpMappingDiffuseSpecularSkinningShadowingCascade");
		case RenderContextType::BumpMappingTextureDiffuse:
			return Core::String(L"BumpMappingTextureDiffuse");
		case RenderContextType::BumpMappingTextureDiffuseShadowingSimple:
			return Core::String(L"BumpMappingTextureDiffuseShadowingSimple");
		case RenderContextType::BumpMappingTextureDiffuseShadowingCascade:
			return Core::String(L"BumpMappingTextureDiffuseShadowingCascade");
		case RenderContextType::BumpMappingTextureDiffuseSkinning:
			return Core::String(L"BumpMappingTextureDiffuseSkinning");
		case RenderContextType::BumpMappingTextureDiffuseSkinningShadowingSimple:
			return Core::String(L"BumpMappingTextureDiffuseSkinningShadowingSimple");
		case RenderContextType::BumpMappingTextureDiffuseSkinningShadowingCascade:
			return Core::String(L"BumpMappingTextureDiffuseSkinningShadowingCascade");
		case RenderContextType::BumpMappingTextureDiffuseSpecular:
			return Core::String(L"BumpMappingTextureDiffuseSpecular");
		case RenderContextType::BumpMappingTextureDiffuseSpecularShadowingSimple:
			return Core::String(L"BumpMappingTextureDiffuseSpecularShadowingSimple");
		case RenderContextType::BumpMappingTextureDiffuseSpecularShadowingCascade:
			return Core::String(L"BumpMappingTextureDiffuseSpecularShadowingCascade");
		case RenderContextType::BumpMappingTextureDiffuseSpecularSkinning:
			return Core::String(L"BumpMappingTextureDiffuseSpecularSkinning");
		case RenderContextType::BumpMappingTextureDiffuseSpecularSkinningShadowingSimple:
			return Core::String(L"BumpMappingTextureDiffuseSpecularSkinningShadowingSimple");
		case RenderContextType::BumpMappingTextureDiffuseSpecularSkinningShadowingCascade:
			return Core::String(L"BumpMappingTextureDiffuseSpecularSkinningShadowingCascade");
		case RenderContextType::LightPerFragmentDiffuse:
			return Core::String(L"LightPerFragmentDiffuse");
		case RenderContextType::LightPerFragmentDiffuseShadowingSimple:
			return Core::String(L"LightPerFragmentDiffuseShadowingSimple");
		case RenderContextType::LightPerFragmentDiffuseShadowingCascade:
			return Core::String(L"LightPerFragmentDiffuseShadowingCascade");
		case RenderContextType::LightPerFragmentDiffuseSkinning:
			return Core::String(L"LightPerFragmentDiffuseSkinning");
		case RenderContextType::LightPerFragmentDiffuseSkinningShadowingSimple:
			return Core::String(L"LightPerFragmentDiffuseSkinningShadowingSimple");
		case RenderContextType::LightPerFragmentDiffuseSkinningShadowingCascade:
			return Core::String(L"LightPerFragmentDiffuseSkinningShadowingCascade");
		case RenderContextType::LightPerFragmentDiffuseSpecular:
			return Core::String(L"LightPerFragmentDiffuseSpecular");
		case RenderContextType::LightPerFragmentDiffuseSpecularShadowingSimple:
			return Core::String(L"LightPerFragmentDiffuseSpecularShadowingSimple");
		case RenderContextType::LightPerFragmentDiffuseSpecularShadowingCascade:
			return Core::String(L"LightPerFragmentDiffuseSpecularShadowingCascade");
		case RenderContextType::LightPerFragmentDiffuseSpecularSkinning:
			return Core::String(L"LightPerFragmentDiffuseSpecularSkinning");
		case RenderContextType::LightPerFragmentDiffuseSpecularSkinningShadowingSimple:
			return Core::String(L"LightPerFragmentDiffuseSpecularSkinningShadowingSimple");
		case RenderContextType::LightPerFragmentDiffuseSpecularSkinningShadowingCascade:
			return Core::String(L"LightPerFragmentDiffuseSpecularSkinningShadowingCascade");
		case RenderContextType::LightPerFragmentTextureDiffuse:
			return Core::String(L"LightPerFragmentTextureDiffuse");
		case RenderContextType::LightPerFragmentTextureDiffuseShadowingSimple:
			return Core::String(L"LightPerFragmentTextureDiffuseShadowingSimple");
		case RenderContextType::LightPerFragmentTextureDiffuseShadowingCascade:
			return Core::String(L"LightPerFragmentTextureDiffuseShadowingCascade");
		case RenderContextType::LightPerFragmentTextureDiffuseSkinning:
			return Core::String(L"LightPerFragmentTextureDiffuseSkinning");
		case RenderContextType::LightPerFragmentTextureDiffuseSkinningShadowingSimple:
			return Core::String(L"LightPerFragmentTextureDiffuseSkinningShadowingSimple");
		case RenderContextType::LightPerFragmentTextureDiffuseSkinningShadowingCascade:
			return Core::String(L"LightPerFragmentTextureDiffuseSkinningShadowingCascade");
		case RenderContextType::LightPerFragmentTextureDiffuseSpecular:
			return Core::String(L"LightPerFragmentTextureDiffuseSpecular");
		case RenderContextType::LightPerFragmentTextureDiffuseSpecularShadowingSimple:
			return Core::String(L"LightPerFragmentTextureDiffuseSpecularShadowingSimple");
		case RenderContextType::LightPerFragmentTextureDiffuseSpecularShadowingCascade:
			return Core::String(L"LightPerFragmentTextureDiffuseSpecularShadowingCascade");
		case RenderContextType::LightPerFragmentTextureDiffuseSpecularSkinning:
			return Core::String(L"LightPerFragmentTextureDiffuseSpecularSkinning");
		case RenderContextType::LightPerFragmentTextureDiffuseSpecularSkinningShadowingSimple:
			return Core::String(L"LightPerFragmentTextureDiffuseSpecularSkinningShadowingSimple");
		case RenderContextType::LightPerFragmentTextureDiffuseSpecularSkinningShadowingCascade:
			return Core::String(L"LightPerFragmentTextureDiffuseSpecularSkinningShadowingCascade");
		case RenderContextType::LightPerVertexDiffuse:
			return Core::String(L"LightPerVertexDiffuse");
		case RenderContextType::LightPerVertexDiffuseShadowingCascade:
			return Core::String(L"LightPerVertexDiffuseShadowingCascade");
		case RenderContextType::LightPerVertexDiffuseShadowingSimple:
			return Core::String(L"LightPerVertexDiffuseShadowingSimple");
		case RenderContextType::LightPerVertexDiffuseSkinning:
			return Core::String(L"LightPerVertexDiffuseSkinning");
		case RenderContextType::LightPerVertexDiffuseSkinningShadowingCascade:
			return Core::String(L"LightPerVertexDiffuseSkinningShadowingCascade");
		case RenderContextType::LightPerVertexDiffuseSkinningShadowingSimple:
			return Core::String(L"LightPerVertexDiffuseSkinningShadowingSimple");
		case RenderContextType::LightPerVertexDiffuseSpecular:
			return Core::String(L"LightPerVertexDiffuseSpecular");
		case RenderContextType::LightPerVertexDiffuseSpecularShadowingSimple:
			return Core::String(L"LightPerVertexDiffuseSpecularShadowingSimple");
		case RenderContextType::LightPerVertexDiffuseSpecularShadowingCascade:
			return Core::String(L"LightPerVertexDiffuseSpecularShadowingCascade");
		case RenderContextType::LightPerVertexDiffuseSpecularSkinning:
			return Core::String(L"LightPerVertexDiffuseSpecularSkinning");
		case RenderContextType::LightPerVertexDiffuseSpecularSkinningShadowingSimple:
			return Core::String(L"LightPerVertexDiffuseSpecularSkinningShadowingSimple");
		case RenderContextType::LightPerVertexDiffuseSpecularSkinningShadowingCascade:
			return Core::String(L"LightPerVertexDiffuseSpecularSkinningShadowingCascade");
		case RenderContextType::LightPerVertexTextureDiffuse:
			return Core::String(L"LightPerVertexTextureDiffuse");
		case RenderContextType::LightPerVertexTextureDiffuseShadowingSimple:
			return Core::String(L"LightPerVertexTextureDiffuseShadowingSimple");
		case RenderContextType::LightPerVertexTextureDiffuseShadowingCascade:
			return Core::String(L"LightPerVertexTextureDiffuseShadowingCascade");
		case RenderContextType::LightPerVertexTextureDiffuseSkinning:
			return Core::String(L"LightPerVertexTextureDiffuseSkinning");
		case RenderContextType::LightPerVertexTextureDiffuseSkinningShadowingSimple:
			return Core::String(L"LightPerVertexTextureDiffuseSkinningShadowingSimple");
		case RenderContextType::LightPerVertexTextureDiffuseSkinningShadowingCascade:
			return Core::String(L"LightPerVertexTextureDiffuseSkinningShadowingCascade");
		case RenderContextType::LightPerVertexTextureDiffuseSpecular:
			return Core::String(L"LightPerVertexTextureDiffuseSpecular");
		case RenderContextType::LightPerVertexTextureDiffuseSpecularShadowingSimple:
			return Core::String(L"LightPerVertexTextureDiffuseSpecularShadowingSimple");
		case RenderContextType::LightPerVertexTextureDiffuseSpecularShadowingCascade:
			return Core::String(L"LightPerVertexTextureDiffuseSpecularShadowingCascade");
		case RenderContextType::LightPerVertexTextureDiffuseSpecularSkinning:
			return Core::String(L"LightPerVertexTextureDiffuseSpecularSkinning");
		case RenderContextType::LightPerVertexTextureDiffuseSpecularSkinningShadowingSimple:
			return Core::String(L"LightPerVertexTextureDiffuseSpecularSkinningShadowingSimple");
		case RenderContextType::LightPerVertexTextureDiffuseSpecularSkinningShadowingCascade:
			return Core::String(L"LightPerVertexTextureDiffuseSpecularSkinningShadowingCascade");
		case RenderContextType::TextSolidColor:
			return Core::String(L"TextSolidColor");
		case RenderContextType::DepthRender:
			return Core::String(L"DepthRender");
		case RenderContextType::DepthRenderSkinning:
			return Core::String(L"DepthRenderSkinning");
		default:
			throw Error::GraphicsException("Unknown render context");
		};
	}
}
PUNK_ENGINE_END
